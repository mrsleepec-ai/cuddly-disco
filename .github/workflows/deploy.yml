name: Deploy Minimal Notes to GitHub Pages

on:
  push:
    branches: [ main ]
    paths:
      - 'minimal_notes_web.zip'
      - '.github/workflows/deploy.yml'
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: pages-deploy
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install tools
        run: sudo apt-get update && sudo apt-get install -y unzip xz-utils

      - name: Unzip project
        run: unzip -o minimal_notes_web.zip

      - name: Detect project dir (pubspec.yaml + lib/)
        id: detect
        shell: bash
        run: |
          set -e
          DIR="$(find . -maxdepth 3 -type f -name pubspec.yaml -print -quit)"
          if [[ -z "$DIR" ]]; then
            echo "pubspec.yaml not found after unzip" >&2; exit 1
          fi
          PROJ_DIR="$(dirname "$DIR")"
          if [[ ! -d "$PROJ_DIR/lib" ]]; then
            echo "lib/ not found next to pubspec.yaml ($PROJ_DIR)" >&2; exit 1
          fi
          echo "DIR=$PROJ_DIR" >> "$GITHUB_OUTPUT"
          echo "Project dir: $PROJ_DIR"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Enable web
        run: flutter config --enable-web

      - name: Ensure web platform
        working-directory: ${{ steps.detect.outputs.DIR }}
        run: flutter create . --platforms web

      - name: Flutter pub get
        working-directory: ${{ steps.detect.outputs.DIR }}
        run: flutter pub get

      - name: Compute base-href
        id: base
        shell: bash
        run: |
          REPO="${GITHUB_REPOSITORY#*/}"
          if [[ "$REPO" == *.github.io ]]; then
            echo "BASE=/" >> "$GITHUB_OUTPUT"
          else
            echo "BASE=/$REPO/" >> "$GITHUB_OUTPUT"
          fi

      - name: Build web (release)
        working-directory: ${{ steps.detect.outputs.DIR }}
        run: flutter build web --release --no-wasm-dry-run --base-href "${{ steps.base.outputs.BASE }}"

      - name: Write version.json
        working-directory: ${{ steps.detect.outputs.DIR }}
        run: |
          mkdir -p build/web
          echo "{\"version\":\"${GITHUB_SHA}\"}" > build/web/version.json

      - name: Deploy to gh-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ${{ steps.detect.outputs.DIR }}/build/web
          force_orphan: true
