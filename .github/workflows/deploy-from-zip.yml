name: Deploy From ZIP (Smart)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages-zip-smart
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Find one ZIP at repo root
        id: findzip
        run: |
          set -e
          zips=$(ls -1 *.zip 2>/dev/null || true)
          if [ -z "$zips" ]; then
            echo "No ZIP at repo root"; exit 1
          fi
          n=$(echo "$zips" | wc -l)
          if [ "$n" -ne 1 ]; then
            echo "Keep exactly one ZIP"; echo "$zips"; exit 1
          fi
          echo "ZIP=$(echo "$zips")" >> "$GITHUB_OUTPUT"

      - name: Unzip
        run: |
          set -e
          mkdir -p extracted
          unzip -q "${{ steps.findzip.outputs.ZIP }}" -d extracted

      - name: Detect project root (pubspec.yaml or index.html)
        id: detect
        run: |
          set -e
          FLUTTER_PUBSPEC=$(find extracted -maxdepth 4 -type f -name pubspec.yaml | head -n1 || true)
          INDEX_HTML=$(find extracted -maxdepth 4 -type f -name index.html | head -n1 || true)
          if [ -n "$FLUTTER_PUBSPEC" ]; then
            echo "mode=flutter" >> "$GITHUB_OUTPUT"
            echo "root=$(dirname "$FLUTTER_PUBSPEC")" >> "$GITHUB_OUTPUT"
          elif [ -n "$INDEX_HTML" ]; then
            echo "mode=static" >> "$GITHUB_OUTPUT"
            echo "root=$(dirname "$INDEX_HTML")" >> "$GITHUB_OUTPUT"
          else
            echo "No pubspec.yaml or index.html found in ZIP"; exit 1
          fi

      - name: Compute BASE href
        run: |
          if [ "${{ github.event.repository.name }}" = "${{ github.repository_owner }}.github.io" ]; then
            echo "BASE=/" >> "$GITHUB_ENV"
          else
            echo "BASE=/${{ github.event.repository.name }}/" >> "$GITHUB_ENV"
          fi
          echo "Using BASE: $BASE"

      # --- ВАЖНО: добавляем плейсхолдер в web/index.html перед сборкой Flutter ---
      - name: Ensure base placeholder in web/index.html
        if: steps.detect.outputs.mode == 'flutter'
        working-directory: ${{ steps.detect.outputs.root }}
        run: |
          set -e
          if [ -f web/index.html ]; then
            if grep -q '\$FLUTTER_BASE_HREF' web/index.html; then
              echo "Placeholder already present"
            elif grep -q '<base ' web/index.html; then
              sed -i 's|<base[^>]*>|<base href="\$FLUTTER_BASE_HREF">|' web/index.html
            else
              sed -i '1s|<head>|<head><base href="\$FLUTTER_BASE_HREF">|' web/index.html
            fi
            echo "Patched web/index.html with \$FLUTTER_BASE_HREF"
          else
            echo "No web/index.html found; creating minimal index.html"
            mkdir -p web
            cat > web/index.html <<'HTML'
<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <base href="$FLUTTER_BASE_HREF">
    <title>Flutter App</title>
  </head>
  <body>
    <script src="flutter.js" defer></script>
    <script>
      window.addEventListener('load', function() {
        _flutter.loader.loadEntrypoint({}).then(function(engineInitializer) {
          return engineInitializer.initializeEngine();
        }).then(function(appRunner) {
          return appRunner.runApp();
        });
      });
    </script>
  </body>
</html>
HTML
          fi

      - name: Setup Flutter
        if: steps.detect.outputs.mode == 'flutter'
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.22.3"

      - name: Build Flutter Web
        if: steps.detect.outputs.mode == 'flutter'
        working-directory: ${{ steps.detect.outputs.root }}
        run: |
          set -e
          flutter pub get
          flutter build web --release --base-href "$BASE"
          echo "OUTDIR=${{ steps.detect.outputs.root }}/build/web" >> "$GITHUB_ENV"

      - name: Patch base href (static)
        if: steps.detect.outputs.mode == 'static'
        working-directory: ${{ steps.detect.outputs.root }}
        run: |
          set -e
          if [ -f index.html ]; then
            if grep -q '<base ' index.html; then
              sed -i 's|<base[^>]*>|<base href="'"$BASE"'">|' index.html
            else
              sed -i '1s|<head>|<head><base href="'"$BASE"'">|' index.html
            fi
          fi
          echo "OUTDIR=${{ steps.detect.outputs.root }}" >> "$GITHUB_ENV"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.OUTDIR }}

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
